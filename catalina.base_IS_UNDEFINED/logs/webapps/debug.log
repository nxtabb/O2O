2020-09-11 19:19:49.345 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.updateProduct] use[master] Strategy,SqlCommonType[UPDATE]..
2020-09-11 19:19:49.350 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-11 19:23:08.043 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.updateProduct] use[master] Strategy,SqlCommonType[UPDATE]..
2020-09-11 19:23:08.044 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-11 19:23:08.070 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.updateProduct - ==>  Preparing: update tb_product SET product_name=?, normal_price=?, promotion_price=?, priority=?, last_edit_time=? WHERE product_id = ? 
2020-09-11 19:23:08.089 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.updateProduct - ==> Parameters: 店铺111(String), 200(String), 100(String), 2(Integer), 2020-09-11 19:23:08.033(Timestamp), 1(Long)
2020-09-11 19:23:08.160 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.updateProduct - <==    Updates: 1
2020-09-11 20:22:02.853 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:22:02.856 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:22:02.932 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p inner join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:22:05.636 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:25:49.932 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:25:49.934 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:25:50.007 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p inner join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:25:51.358 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:28:05.274 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:28:05.275 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:28:05.284 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:28:07.514 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:30:27.505 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:30:27.506 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:30:27.516 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:30:33.260 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:30:33.340 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - <==      Total: 2
2020-09-11 20:31:05.219 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:31:05.222 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:31:05.298 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:31:11.576 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:31:11.728 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - <==      Total: 2
2020-09-11 20:31:46.501 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:31:46.505 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:31:46.604 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:31:49.010 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:31:49.167 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - <==      Total: 2
2020-09-11 20:33:12.593 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:33:12.594 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:33:12.603 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:33:14.143 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:33:14.199 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - <==      Total: 2
2020-09-11 20:33:59.573 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.queryProductById] use[slave] Strategy,SqlCommonType[SELECT]..
2020-09-11 20:33:59.574 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是slave
2020-09-11 20:33:59.583 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==>  Preparing: select p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr as detail_img, pm.img_desc, pm.create_time from tb_product p left join tb_product_img pm on p.product_id = pm.product_id where p.product_id = ? order by pm.priority desc 
2020-09-11 20:34:01.962 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - ==> Parameters: 1(Long)
2020-09-11 20:34:02.009 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.queryProductById - <==      Total: 2
