2020-09-09 08:52:29.775 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.batchInsertProductCategory] use[master] Strategy,SqlCommonType[INSERT]..
2020-09-09 08:52:29.779 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 08:52:29.812 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==>  Preparing: insert into tb_product_cateogry(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-09-09 08:52:29.831 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==> Parameters: aaa(String), 1(Integer), null, 1(Long), bbb(String), 2(Integer), null, 1(Long)
2020-09-09 08:52:54.724 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.batchInsertProductCategory] use[master] Strategy,SqlCommonType[INSERT]..
2020-09-09 08:52:54.728 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 08:52:54.754 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==>  Preparing: insert into tb_product_cateogory(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-09-09 08:52:54.772 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==> Parameters: aaa(String), 1(Integer), null, 1(Long), bbb(String), 2(Integer), null, 1(Long)
2020-09-09 08:53:19.326 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.batchInsertProductCategory] use[master] Strategy,SqlCommonType[INSERT]..
2020-09-09 08:53:19.327 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 08:53:19.353 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==>  Preparing: insert into tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-09-09 08:53:19.371 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - ==> Parameters: aaa(String), 1(Integer), null, 1(Long), bbb(String), 2(Integer), null, 1(Long)
2020-09-09 08:53:19.436 [main] DEBUG c.h.O.d.P.batchInsertProductCategory - <==    Updates: 2
2020-09-09 12:13:08.799 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.deleteProductCategory] use[master] Strategy,SqlCommonType[DELETE]..
2020-09-09 12:13:08.800 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 12:13:08.811 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==>  Preparing: delete from tb_product_category where product_category_id=? and shop_id=? 
2020-09-09 12:13:08.827 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==> Parameters: 5(Long), 1(Long)
2020-09-09 12:13:08.889 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - <==    Updates: 1
2020-09-09 12:48:29.185 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.deleteProductCategory] use[master] Strategy,SqlCommonType[DELETE]..
2020-09-09 12:48:29.187 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 12:48:29.198 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==>  Preparing: delete from tb_product_category where product_category_id=? and shop_id=? 
2020-09-09 12:48:29.213 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==> Parameters: 5(Long), 1(Long)
2020-09-09 12:48:29.261 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - <==    Updates: 0
2020-09-09 14:39:44.710 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.deleteProductCategory] use[master] Strategy,SqlCommonType[DELETE]..
2020-09-09 14:39:44.711 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 14:39:44.721 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==>  Preparing: delete from tb_product_category where product_category_id=? and shop_id=? 
2020-09-09 14:39:44.736 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==> Parameters: 1(Long), 1(Long)
2020-09-09 14:39:44.791 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - <==    Updates: 1
2020-09-09 15:02:12.509 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductCategoryDao.deleteProductCategory] use[master] Strategy,SqlCommonType[DELETE]..
2020-09-09 15:02:12.510 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 15:02:12.520 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==>  Preparing: delete from tb_product_category where product_category_id=? and shop_id=? 
2020-09-09 15:02:12.538 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - ==> Parameters: 6(Long), 1(Long)
2020-09-09 15:02:12.599 [main] DEBUG c.h.O.dao.ProductCategoryDao.deleteProductCategory - <==    Updates: 1
2020-09-09 21:09:47.343 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.insertProduct] use[master] Strategy,SqlCommonType[INSERT]..
2020-09-09 21:09:47.344 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 21:09:47.353 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.insertProduct - ==>  Preparing: insert into tb_product( product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2020-09-09 21:12:09.861 [main] DEBUG c.hrbeu.O2O.dao.split.DynamicDataSourceInterceptor - 设置方法[com.hrbeu.O2O.dao.ProductDao.insertProduct] use[master] Strategy,SqlCommonType[INSERT]..
2020-09-09 21:12:09.862 [main] DEBUG com.hrbeu.O2O.dao.split.DynamicDataSourceHolder - 所使用的数据源是master
2020-09-09 21:12:09.872 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.insertProduct - ==>  Preparing: insert into tb_product( product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
2020-09-09 21:12:09.893 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.insertProduct - ==> Parameters: 店铺1(String), 店铺1的描述(String), test(String), 100(String), 50(String), 1(Integer), 2020-09-09 21:12:09.851(Timestamp), 2020-09-09 21:12:09.851(Timestamp), 1(Integer), 4(Long), 1(Long)
2020-09-09 21:12:09.953 [main] DEBUG com.hrbeu.O2O.dao.ProductDao.insertProduct - <==    Updates: 1
